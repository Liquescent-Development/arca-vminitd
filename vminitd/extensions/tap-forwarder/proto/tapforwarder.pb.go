// Arca TAP Forwarder Control Plane Protocol
// gRPC API for dynamic network interface management in containers

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/tapforwarder.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to attach container to a network
type AttachNetworkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network interface name (e.g., "eth0", "eth1")
	Device string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// vsock port for data plane (packet forwarding)
	VsockPort uint32 `protobuf:"varint,2,opt,name=vsock_port,json=vsockPort,proto3" json:"vsock_port,omitempty"`
	// IP address to assign to this interface (e.g., "172.18.0.2")
	IpAddress string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Network gateway IP (e.g., "172.18.0.1")
	Gateway string `protobuf:"bytes,4,opt,name=gateway,proto3" json:"gateway,omitempty"`
	// Network mask in CIDR notation (e.g., 24 for /24)
	// If not specified, defaults to /24
	Netmask uint32 `protobuf:"varint,5,opt,name=netmask,proto3" json:"netmask,omitempty"`
	// MAC address to assign to the interface (e.g., "02:42:ac:11:00:02")
	// If not specified, a random MAC will be generated
	MacAddress    string `protobuf:"bytes,6,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachNetworkRequest) Reset() {
	*x = AttachNetworkRequest{}
	mi := &file_proto_tapforwarder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachNetworkRequest) ProtoMessage() {}

func (x *AttachNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachNetworkRequest.ProtoReflect.Descriptor instead.
func (*AttachNetworkRequest) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{0}
}

func (x *AttachNetworkRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *AttachNetworkRequest) GetVsockPort() uint32 {
	if x != nil {
		return x.VsockPort
	}
	return 0
}

func (x *AttachNetworkRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AttachNetworkRequest) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *AttachNetworkRequest) GetNetmask() uint32 {
	if x != nil {
		return x.Netmask
	}
	return 0
}

func (x *AttachNetworkRequest) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type AttachNetworkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success status
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if success = false
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// MAC address assigned to the interface
	MacAddress    string `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachNetworkResponse) Reset() {
	*x = AttachNetworkResponse{}
	mi := &file_proto_tapforwarder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachNetworkResponse) ProtoMessage() {}

func (x *AttachNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachNetworkResponse.ProtoReflect.Descriptor instead.
func (*AttachNetworkResponse) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{1}
}

func (x *AttachNetworkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AttachNetworkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AttachNetworkResponse) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

// Request to detach container from a network
type DetachNetworkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network interface name to remove (e.g., "eth0")
	Device        string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachNetworkRequest) Reset() {
	*x = DetachNetworkRequest{}
	mi := &file_proto_tapforwarder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachNetworkRequest) ProtoMessage() {}

func (x *DetachNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachNetworkRequest.ProtoReflect.Descriptor instead.
func (*DetachNetworkRequest) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{2}
}

func (x *DetachNetworkRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type DetachNetworkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success status
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if success = false
	Error         string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachNetworkResponse) Reset() {
	*x = DetachNetworkResponse{}
	mi := &file_proto_tapforwarder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachNetworkResponse) ProtoMessage() {}

func (x *DetachNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachNetworkResponse.ProtoReflect.Descriptor instead.
func (*DetachNetworkResponse) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{3}
}

func (x *DetachNetworkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DetachNetworkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to list all attached networks
type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_proto_tapforwarder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksRequest.ProtoReflect.Descriptor instead.
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{4}
}

type ListNetworksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*NetworkInfo         `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_proto_tapforwarder_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksResponse.ProtoReflect.Descriptor instead.
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{5}
}

func (x *ListNetworksResponse) GetNetworks() []*NetworkInfo {
	if x != nil {
		return x.Networks
	}
	return nil
}

type NetworkInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Interface name
	Device string `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// IP address
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Gateway
	Gateway string `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	// vsock port for data plane
	VsockPort uint32 `protobuf:"varint,4,opt,name=vsock_port,json=vsockPort,proto3" json:"vsock_port,omitempty"`
	// MAC address
	MacAddress string `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Packet statistics
	Stats         *PacketStats `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInfo) Reset() {
	*x = NetworkInfo{}
	mi := &file_proto_tapforwarder_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfo) ProtoMessage() {}

func (x *NetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfo.ProtoReflect.Descriptor instead.
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkInfo) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *NetworkInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkInfo) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NetworkInfo) GetVsockPort() uint32 {
	if x != nil {
		return x.VsockPort
	}
	return 0
}

func (x *NetworkInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInfo) GetStats() *PacketStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type PacketStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Packets sent (TAP -> vsock)
	PacketsSent uint64 `protobuf:"varint,1,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	// Packets received (vsock -> TAP)
	PacketsReceived uint64 `protobuf:"varint,2,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	// Bytes sent
	BytesSent uint64 `protobuf:"varint,3,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	// Bytes received
	BytesReceived uint64 `protobuf:"varint,4,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	// Send errors
	SendErrors uint64 `protobuf:"varint,5,opt,name=send_errors,json=sendErrors,proto3" json:"send_errors,omitempty"`
	// Receive errors
	ReceiveErrors uint64 `protobuf:"varint,6,opt,name=receive_errors,json=receiveErrors,proto3" json:"receive_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketStats) Reset() {
	*x = PacketStats{}
	mi := &file_proto_tapforwarder_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketStats) ProtoMessage() {}

func (x *PacketStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketStats.ProtoReflect.Descriptor instead.
func (*PacketStats) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{7}
}

func (x *PacketStats) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *PacketStats) GetPacketsReceived() uint64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *PacketStats) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *PacketStats) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *PacketStats) GetSendErrors() uint64 {
	if x != nil {
		return x.SendErrors
	}
	return 0
}

func (x *PacketStats) GetReceiveErrors() uint64 {
	if x != nil {
		return x.ReceiveErrors
	}
	return 0
}

// Request forwarder status
type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_proto_tapforwarder_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{8}
}

type GetStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Forwarder version
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Number of active network interfaces
	ActiveNetworks uint32 `protobuf:"varint,2,opt,name=active_networks,json=activeNetworks,proto3" json:"active_networks,omitempty"`
	// Uptime in seconds
	UptimeSeconds uint64 `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	// Overall packet statistics
	TotalStats    *PacketStats `protobuf:"bytes,4,opt,name=total_stats,json=totalStats,proto3" json:"total_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_proto_tapforwarder_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{9}
}

func (x *GetStatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetStatusResponse) GetActiveNetworks() uint32 {
	if x != nil {
		return x.ActiveNetworks
	}
	return 0
}

func (x *GetStatusResponse) GetUptimeSeconds() uint64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *GetStatusResponse) GetTotalStats() *PacketStats {
	if x != nil {
		return x.TotalStats
	}
	return nil
}

// Request to update DNS mappings for network topology
type UpdateDNSMappingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Complete network topology for this container
	// Maps network name -> list of containers on that network
	Networks      map[string]*NetworkPeers `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDNSMappingsRequest) Reset() {
	*x = UpdateDNSMappingsRequest{}
	mi := &file_proto_tapforwarder_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDNSMappingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDNSMappingsRequest) ProtoMessage() {}

func (x *UpdateDNSMappingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDNSMappingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDNSMappingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateDNSMappingsRequest) GetNetworks() map[string]*NetworkPeers {
	if x != nil {
		return x.Networks
	}
	return nil
}

type NetworkPeers struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Containers on this network
	Containers    []*ContainerDNSInfo `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkPeers) Reset() {
	*x = NetworkPeers{}
	mi := &file_proto_tapforwarder_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPeers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPeers) ProtoMessage() {}

func (x *NetworkPeers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPeers.ProtoReflect.Descriptor instead.
func (*NetworkPeers) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkPeers) GetContainers() []*ContainerDNSInfo {
	if x != nil {
		return x.Containers
	}
	return nil
}

type ContainerDNSInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container name (for DNS resolution)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Container ID (64-char Docker ID)
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// IP address on this network
	IpAddress string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Hostname aliases
	Aliases       []string `protobuf:"bytes,4,rep,name=aliases,proto3" json:"aliases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerDNSInfo) Reset() {
	*x = ContainerDNSInfo{}
	mi := &file_proto_tapforwarder_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerDNSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerDNSInfo) ProtoMessage() {}

func (x *ContainerDNSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerDNSInfo.ProtoReflect.Descriptor instead.
func (*ContainerDNSInfo) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{12}
}

func (x *ContainerDNSInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerDNSInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerDNSInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ContainerDNSInfo) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type UpdateDNSMappingsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success status
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if success = false
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Number of DNS records updated
	RecordsUpdated uint32 `protobuf:"varint,3,opt,name=records_updated,json=recordsUpdated,proto3" json:"records_updated,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateDNSMappingsResponse) Reset() {
	*x = UpdateDNSMappingsResponse{}
	mi := &file_proto_tapforwarder_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDNSMappingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDNSMappingsResponse) ProtoMessage() {}

func (x *UpdateDNSMappingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tapforwarder_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDNSMappingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateDNSMappingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_tapforwarder_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateDNSMappingsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateDNSMappingsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *UpdateDNSMappingsResponse) GetRecordsUpdated() uint32 {
	if x != nil {
		return x.RecordsUpdated
	}
	return 0
}

var File_proto_tapforwarder_proto protoreflect.FileDescriptor

const file_proto_tapforwarder_proto_rawDesc = "" +
	"\n" +
	"\x18proto/tapforwarder.proto\x12\x14arca.tapforwarder.v1\"\xc1\x01\n" +
	"\x14AttachNetworkRequest\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1d\n" +
	"\n" +
	"vsock_port\x18\x02 \x01(\rR\tvsockPort\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x18\n" +
	"\agateway\x18\x04 \x01(\tR\agateway\x12\x18\n" +
	"\anetmask\x18\x05 \x01(\rR\anetmask\x12\x1f\n" +
	"\vmac_address\x18\x06 \x01(\tR\n" +
	"macAddress\"h\n" +
	"\x15AttachNetworkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x1f\n" +
	"\vmac_address\x18\x03 \x01(\tR\n" +
	"macAddress\".\n" +
	"\x14DetachNetworkRequest\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\"G\n" +
	"\x15DetachNetworkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x15\n" +
	"\x13ListNetworksRequest\"U\n" +
	"\x14ListNetworksResponse\x12=\n" +
	"\bnetworks\x18\x01 \x03(\v2!.arca.tapforwarder.v1.NetworkInfoR\bnetworks\"\xd7\x01\n" +
	"\vNetworkInfo\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x18\n" +
	"\agateway\x18\x03 \x01(\tR\agateway\x12\x1d\n" +
	"\n" +
	"vsock_port\x18\x04 \x01(\rR\tvsockPort\x12\x1f\n" +
	"\vmac_address\x18\x05 \x01(\tR\n" +
	"macAddress\x127\n" +
	"\x05stats\x18\x06 \x01(\v2!.arca.tapforwarder.v1.PacketStatsR\x05stats\"\xe9\x01\n" +
	"\vPacketStats\x12!\n" +
	"\fpackets_sent\x18\x01 \x01(\x04R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\x02 \x01(\x04R\x0fpacketsReceived\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x03 \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x04 \x01(\x04R\rbytesReceived\x12\x1f\n" +
	"\vsend_errors\x18\x05 \x01(\x04R\n" +
	"sendErrors\x12%\n" +
	"\x0ereceive_errors\x18\x06 \x01(\x04R\rreceiveErrors\"\x12\n" +
	"\x10GetStatusRequest\"\xc1\x01\n" +
	"\x11GetStatusResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12'\n" +
	"\x0factive_networks\x18\x02 \x01(\rR\x0eactiveNetworks\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x04R\ruptimeSeconds\x12B\n" +
	"\vtotal_stats\x18\x04 \x01(\v2!.arca.tapforwarder.v1.PacketStatsR\n" +
	"totalStats\"\xd5\x01\n" +
	"\x18UpdateDNSMappingsRequest\x12X\n" +
	"\bnetworks\x18\x01 \x03(\v2<.arca.tapforwarder.v1.UpdateDNSMappingsRequest.NetworksEntryR\bnetworks\x1a_\n" +
	"\rNetworksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".arca.tapforwarder.v1.NetworkPeersR\x05value:\x028\x01\"V\n" +
	"\fNetworkPeers\x12F\n" +
	"\n" +
	"containers\x18\x01 \x03(\v2&.arca.tapforwarder.v1.ContainerDNSInfoR\n" +
	"containers\"o\n" +
	"\x10ContainerDNSInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x18\n" +
	"\aaliases\x18\x04 \x03(\tR\aaliases\"t\n" +
	"\x19UpdateDNSMappingsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12'\n" +
	"\x0frecords_updated\x18\x03 \x01(\rR\x0erecordsUpdated2\x9d\x04\n" +
	"\fTAPForwarder\x12h\n" +
	"\rAttachNetwork\x12*.arca.tapforwarder.v1.AttachNetworkRequest\x1a+.arca.tapforwarder.v1.AttachNetworkResponse\x12h\n" +
	"\rDetachNetwork\x12*.arca.tapforwarder.v1.DetachNetworkRequest\x1a+.arca.tapforwarder.v1.DetachNetworkResponse\x12e\n" +
	"\fListNetworks\x12).arca.tapforwarder.v1.ListNetworksRequest\x1a*.arca.tapforwarder.v1.ListNetworksResponse\x12\\\n" +
	"\tGetStatus\x12&.arca.tapforwarder.v1.GetStatusRequest\x1a'.arca.tapforwarder.v1.GetStatusResponse\x12t\n" +
	"\x11UpdateDNSMappings\x12..arca.tapforwarder.v1.UpdateDNSMappingsRequest\x1a/.arca.tapforwarder.v1.UpdateDNSMappingsResponseB1Z/github.com/vas-solutus/arca-tap-forwarder/protob\x06proto3"

var (
	file_proto_tapforwarder_proto_rawDescOnce sync.Once
	file_proto_tapforwarder_proto_rawDescData []byte
)

func file_proto_tapforwarder_proto_rawDescGZIP() []byte {
	file_proto_tapforwarder_proto_rawDescOnce.Do(func() {
		file_proto_tapforwarder_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_tapforwarder_proto_rawDesc), len(file_proto_tapforwarder_proto_rawDesc)))
	})
	return file_proto_tapforwarder_proto_rawDescData
}

var file_proto_tapforwarder_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_tapforwarder_proto_goTypes = []any{
	(*AttachNetworkRequest)(nil),      // 0: arca.tapforwarder.v1.AttachNetworkRequest
	(*AttachNetworkResponse)(nil),     // 1: arca.tapforwarder.v1.AttachNetworkResponse
	(*DetachNetworkRequest)(nil),      // 2: arca.tapforwarder.v1.DetachNetworkRequest
	(*DetachNetworkResponse)(nil),     // 3: arca.tapforwarder.v1.DetachNetworkResponse
	(*ListNetworksRequest)(nil),       // 4: arca.tapforwarder.v1.ListNetworksRequest
	(*ListNetworksResponse)(nil),      // 5: arca.tapforwarder.v1.ListNetworksResponse
	(*NetworkInfo)(nil),               // 6: arca.tapforwarder.v1.NetworkInfo
	(*PacketStats)(nil),               // 7: arca.tapforwarder.v1.PacketStats
	(*GetStatusRequest)(nil),          // 8: arca.tapforwarder.v1.GetStatusRequest
	(*GetStatusResponse)(nil),         // 9: arca.tapforwarder.v1.GetStatusResponse
	(*UpdateDNSMappingsRequest)(nil),  // 10: arca.tapforwarder.v1.UpdateDNSMappingsRequest
	(*NetworkPeers)(nil),              // 11: arca.tapforwarder.v1.NetworkPeers
	(*ContainerDNSInfo)(nil),          // 12: arca.tapforwarder.v1.ContainerDNSInfo
	(*UpdateDNSMappingsResponse)(nil), // 13: arca.tapforwarder.v1.UpdateDNSMappingsResponse
	nil,                               // 14: arca.tapforwarder.v1.UpdateDNSMappingsRequest.NetworksEntry
}
var file_proto_tapforwarder_proto_depIdxs = []int32{
	6,  // 0: arca.tapforwarder.v1.ListNetworksResponse.networks:type_name -> arca.tapforwarder.v1.NetworkInfo
	7,  // 1: arca.tapforwarder.v1.NetworkInfo.stats:type_name -> arca.tapforwarder.v1.PacketStats
	7,  // 2: arca.tapforwarder.v1.GetStatusResponse.total_stats:type_name -> arca.tapforwarder.v1.PacketStats
	14, // 3: arca.tapforwarder.v1.UpdateDNSMappingsRequest.networks:type_name -> arca.tapforwarder.v1.UpdateDNSMappingsRequest.NetworksEntry
	12, // 4: arca.tapforwarder.v1.NetworkPeers.containers:type_name -> arca.tapforwarder.v1.ContainerDNSInfo
	11, // 5: arca.tapforwarder.v1.UpdateDNSMappingsRequest.NetworksEntry.value:type_name -> arca.tapforwarder.v1.NetworkPeers
	0,  // 6: arca.tapforwarder.v1.TAPForwarder.AttachNetwork:input_type -> arca.tapforwarder.v1.AttachNetworkRequest
	2,  // 7: arca.tapforwarder.v1.TAPForwarder.DetachNetwork:input_type -> arca.tapforwarder.v1.DetachNetworkRequest
	4,  // 8: arca.tapforwarder.v1.TAPForwarder.ListNetworks:input_type -> arca.tapforwarder.v1.ListNetworksRequest
	8,  // 9: arca.tapforwarder.v1.TAPForwarder.GetStatus:input_type -> arca.tapforwarder.v1.GetStatusRequest
	10, // 10: arca.tapforwarder.v1.TAPForwarder.UpdateDNSMappings:input_type -> arca.tapforwarder.v1.UpdateDNSMappingsRequest
	1,  // 11: arca.tapforwarder.v1.TAPForwarder.AttachNetwork:output_type -> arca.tapforwarder.v1.AttachNetworkResponse
	3,  // 12: arca.tapforwarder.v1.TAPForwarder.DetachNetwork:output_type -> arca.tapforwarder.v1.DetachNetworkResponse
	5,  // 13: arca.tapforwarder.v1.TAPForwarder.ListNetworks:output_type -> arca.tapforwarder.v1.ListNetworksResponse
	9,  // 14: arca.tapforwarder.v1.TAPForwarder.GetStatus:output_type -> arca.tapforwarder.v1.GetStatusResponse
	13, // 15: arca.tapforwarder.v1.TAPForwarder.UpdateDNSMappings:output_type -> arca.tapforwarder.v1.UpdateDNSMappingsResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_tapforwarder_proto_init() }
func file_proto_tapforwarder_proto_init() {
	if File_proto_tapforwarder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_tapforwarder_proto_rawDesc), len(file_proto_tapforwarder_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_tapforwarder_proto_goTypes,
		DependencyIndexes: file_proto_tapforwarder_proto_depIdxs,
		MessageInfos:      file_proto_tapforwarder_proto_msgTypes,
	}.Build()
	File_proto_tapforwarder_proto = out.File
	file_proto_tapforwarder_proto_goTypes = nil
	file_proto_tapforwarder_proto_depIdxs = nil
}
